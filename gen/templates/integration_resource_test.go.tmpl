// Copyright (c) Mondoo, Inc.
// SPDX-License-Identifier: BUSL-1.1
//
// Code generated by gen.go; DO NOT EDIT.

package provider

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAcc{{.ResourceClassName}}IntegrationResource(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create and Read testing
			{
				Config: testAcc{{.ResourceClassName}}IntegrationResourceConfig(accSpace.ID(), "one",
					{{- range $key, $props := .Fields}} {{ $props.GoTestValue $key 1 }}, {{- end}}),
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("mondoo_integration_{{.TerraformResourceName}}.test", "name", "one"),
					resource.TestCheckResourceAttr("mondoo_integration_{{.TerraformResourceName}}.test", "space_id", accSpace.ID()),
				),
			},
			{
				Config: testAcc{{.ResourceClassName}}IntegrationResourceWithSpaceInProviderConfig(accSpace.ID(), "two",
					{{- range $key, $props := .Fields}} {{ $props.GoTestValue $key 1 }}, {{- end}}),
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("mondoo_integration_{{.TerraformResourceName}}.test", "name", "two"),
					resource.TestCheckResourceAttr("mondoo_integration_{{.TerraformResourceName}}.test", "space_id", accSpace.ID()),
				),
			},
			// Update and Read testing
			{
				Config: testAcc{{.ResourceClassName}}IntegrationResourceConfig(accSpace.ID(), "three",
					{{- range $key, $props := .Fields}} {{ $props.GoTestValue $key 2 }}, {{- end}}),
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("mondoo_integration_{{.TerraformResourceName}}.test", "name", "three"),
					resource.TestCheckResourceAttr("mondoo_integration_{{.TerraformResourceName}}.test", "space_id", accSpace.ID()),
				),
			},
			{
				Config: testAcc{{.ResourceClassName}}IntegrationResourceWithSpaceInProviderConfig(accSpace.ID(), "four",
					{{- range $key, $props := .Fields}} {{ $props.GoTestValue $key 2 }}, {{- end}}),
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("mondoo_integration_{{.TerraformResourceName}}.test", "name", "four"),
					resource.TestCheckResourceAttr("mondoo_integration_{{.TerraformResourceName}}.test", "space_id", accSpace.ID()),
				),
			},
			// Delete testing automatically occurs in TestCase
		},
	})
}

func testAcc{{.ResourceClassName}}IntegrationResourceConfig(spaceID string, intName string,
{{- range $key, $props := .Fields}} {{ toSnakeCase $key }} {{ $props.HclType }}, {{- end}}) string {
	return fmt.Sprintf(`
resource "mondoo_integration_{{.TerraformResourceName}}" "test" {
  space_id      = %q
  name          = %q
{{- range $key, $props := .Fields}}
  {{ toSnakeCase $key }} = %{{ $props.GoFmtVerb }}
{{- end}}
}
`, spaceID, intName,
{{- range $key, $props := .Fields}} {{ toSnakeCase $key }}, {{- end}}
)
}

func testAcc{{.ResourceClassName}}IntegrationResourceWithSpaceInProviderConfig(spaceID string, intName string,
{{- range $key, $props := .Fields}} {{ toSnakeCase $key }} {{ $props.HclType }}, {{- end}}) string {
	return fmt.Sprintf(`
provider "mondoo" {
  space = %q
}
resource "mondoo_integration_{{.TerraformResourceName}}" "test" {
  name          = %q
{{- range $key, $props := .Fields}}
  {{ toSnakeCase $key }} = %{{ $props.GoFmtVerb }}
{{- end}}
}
`, spaceID, intName,
{{- range $key, $props := .Fields}} {{ toSnakeCase $key }}, {{- end}}
)
}
